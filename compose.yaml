services:
  # NEXT SERVICE PORT: 10006
  #-----------------------------------------------------
  # extract :10001
  #-----------------------------------------------------
  admin:
    container_name: admin
    image: jemison/dev
    # Simulate CF
    # https://stackoverflow.com/questions/42345235/how-to-specify-memory-cpu-limit-in-docker-compose-version-3
    deploy:
      resources:
        limits:
          memory: 512m
    build: 
      context: .
      dockerfile: ./cmd/admin/Dockerfile
    entrypoint: /home/vcap/app/cmd/admin/service.exe
    volumes:
      - type: bind
        source: .
        target: /home/vcap/app
    ports:
      - 10001:8888
    # https://docs.docker.com/compose/how-tos/startup-order/
    depends_on:
      minio:
        condition: service_healthy
      jemison-queues-db:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://admin:8888/heartbeat || exit 1
      interval: 60s
      timeout: 180s
      retries: 3
      start_period: 60s
    environment:
      ENV: "DOCKER"
      PORT: 8888
      DEBUG_LEVEL: debug
      GIN_MODE: debug
    restart: no

  #-----------------------------------------------------
  # extract :10002
  #-----------------------------------------------------
  extract:
    container_name: extract
    image: jemison/dev
    # Simulate CF
    # https://stackoverflow.com/questions/42345235/how-to-specify-memory-cpu-limit-in-docker-compose-version-3
    deploy:
      resources:
        limits:
          memory: 512m
    build: 
      context: .
      dockerfile: ./cmd/extract/Dockerfile
    entrypoint: /home/vcap/app/cmd/extract/service.exe
    volumes:
      - type: bind
        source: .
        target: /home/vcap/app
    ports:
      - 10002:8888
    # https://docs.docker.com/compose/how-tos/startup-order/
    depends_on:
      minio:
        condition: service_healthy
      jemison-queues-db:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://extract:8888/heartbeat || exit 1
      interval: 60s
      timeout: 180s
      retries: 3
      start_period: 60s
    environment:
      ENV: "DOCKER"
      PORT: 8888
      DEBUG_LEVEL: debug
      GIN_MODE: debug
    restart: no

  #-----------------------------------------------------
  # fetch :10003
  #-----------------------------------------------------
  fetch:
    container_name: fetch
    image: jemison/dev
    deploy:
      resources:
        limits:
          memory: 236M
    build: 
      context: .
      dockerfile: ./cmd/fetch/Dockerfile
    entrypoint: /home/vcap/app/cmd/fetch/service.exe
    volumes:
      - type: bind
        source: .
        target: /app
    ports:
      - 10003:8888
    # https://docs.docker.com/compose/how-tos/startup-order/
    depends_on:
      minio:
        condition: service_healthy
      jemison-queues-db:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://fetch:8888/heartbeat || exit 1
      interval: 60s
      timeout: 180s
      retries: 3
      start_period: 60s
    environment:
      ENV: "DOCKER"
      PORT: 8888
      API_KEY: lego
      DEBUG_LEVEL: debug
      GIN_MODE: release
    restart: no

  #-----------------------------------------------------
  # pack :10004
  #-----------------------------------------------------
  pack:
    container_name: pack
    image: jemison/dev
    build: 
      context: .
      dockerfile: ./cmd/pack/Dockerfile
    entrypoint: /home/vcap/app/cmd/pack/service.exe
    volumes:
      - type: bind
        source: .
        target: /home/vcap/app
    ports:
      - 10004:8888
    # https://docs.docker.com/compose/how-tos/startup-order/
    depends_on:
      minio:
        condition: service_healthy
      jemison-queues-db:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://pack:8888/heartbeat || exit 1
      interval: 60s
      timeout: 180s
      retries: 3
      start_period: 60s
    environment:
      ENV: "DOCKER"
      DEBUG_LEVEL: "debug"
      GIN_MODE: debug
      PORT: 8888
    restart: no

  #-----------------------------------------------------
  # serve :10000
  #-----------------------------------------------------
  serve:
    container_name: serve
    image: jemison/dev
    build: 
      context: .
      dockerfile: ./cmd/serve/Dockerfile
    deploy:
      resources:
        limits:
          memory: 512M
    ulimits:
      nofile:
          soft: 65536
          hard: 65536
    entrypoint: /home/vcap/app/cmd/serve/service.exe
    volumes:
      - type: bind
        source: .
        target: /home/vcap/app
    ports:
      - 10000:8888
    # https://docs.docker.com/compose/how-tos/startup-order/
    depends_on:
      minio:
        condition: service_healthy
      jemison-queues-db:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://serve:8888/api/heartbeat || exit 1
      interval: 60s
      timeout: 180s
      retries: 3
      start_period: 60s
    environment:
      ENV: "DOCKER"
      DEBUG_LEVEL: "warn"
      PORT: 8888
      GIN_MODE: release
    restart: no

  #-----------------------------------------------------
  # validate :10005
  #-----------------------------------------------------
  validate:
    container_name: validate
    image: jemison/dev
    build: 
      context: .
      dockerfile: ./cmd/validate/Dockerfile
    entrypoint: /home/vcap/app/cmd/validate/service.exe
    volumes:
      - type: bind
        source: .
        target: /home/vcap/app
    ports:
      - 10005:8888
    # https://docs.docker.com/compose/how-tos/startup-order/
    depends_on:
      minio:
        condition: service_healthy
      jemison-queues-db:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://validate:8888/heartbeat || exit 1
      interval: 60s
      timeout: 180s
      retries: 3
      start_period: 60s
    environment:
      ENV: "DOCKER"
      PORT: 8888
      DEBUG_LEVEL: debug
      GIN_MODE: debug
    restart: no

  #-----------------------------------------------------
  # walk :10006
  #-----------------------------------------------------
  walk:
    container_name: walk
    image: jemison/dev
    build: 
      context: .
      dockerfile: ./cmd/walk/Dockerfile
    entrypoint: /home/vcap/app/cmd/walk/service.exe
    volumes:
      - type: bind
        source: .
        target: /home/vcap/app
    ports:
      - 10006:8888
    # https://docs.docker.com/compose/how-tos/startup-order/
    depends_on:
      minio:
        condition: service_healthy
      jemison-queues-db:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://walk:8888/heartbeat || exit 1
      interval: 60s
      timeout: 180s
      retries: 3
      start_period: 60s
    environment:
      ENV: "DOCKER"
      PORT: 8888
      DEBUG_LEVEL: debug
      GIN_MODE: debug
    restart: no

  #-----------------------------------------------------
  # river queue watcher :11111
  #-----------------------------------------------------
  ui:
    image: ghcr.io/riverqueue/riverui:latest
    ports:
      - 11111:8080
    environment:
      DATABASE_URL: postgresql://postgres@jemison-queues-db:5432/postgres
      RIVER_LOG_LEVEL: ERROR
      RIVER_DEBUG: 0
    depends_on:
      jemison-queues-db:
        condition: service_healthy

  #-----------------------------------------------------
  # postgres/jemison-queues-db :5432
  #-----------------------------------------------------
  jemison-queues-db:
    image: postgres:16-alpine
    ports:
      - 5432:5432
    volumes:
      - jemison-queues-db-vol:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: "trust"
    healthcheck:
      # test: ["CMD-SHELL", "pg_isready", "-d", "postgres", "-U", "postgres"]
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s  

  #-----------------------------------------------------
  # minio :9001
  #-----------------------------------------------------
  minio:
    image: minio/minio:latest
    hostname: minio
    command: server /data --console-address ":9001" 
    expose:
      - "9000"
      - "9001"
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: numbernine
      MINIO_ROOT_PASSWORD: numbernine
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5    
    volumes:
      - minio-data:/data
      
  #-----------------------------------------------------
  # pgweb :22222
  #-----------------------------------------------------
  pgweb:
    image: sosedoff/pgweb
    container_name: pgweb 
    restart: always
    ports: 
      - 22222:8081
    environment:
      PGWEB_DATABASE_URL: postgresql://postgres@jemison-queues-db:5432/postgres?sslmode=disable
    depends_on:
      jemison-queues-db:
        condition: service_healthy

  #-----------------------------------------------------
  # test.gov :11112
  #-----------------------------------------------------
  # This is a python on-liner that serves up the complete
  # works of Sherlock Holmes. It serves as a pathological
  # crawling target for local testing.
  test.gov:
    image: jemison/dev
    container_name: test.gov
    restart: always
    ports: 
      - 11112:80
    entrypoint: python3 -m http.server 80 --directory /home/vcap/app/testing/sherlock/sherlock-holm.es
    volumes:
      - type: bind
        source: .
        target: /home/vcap/app
    external_links:
      - test.gov:t2.gov
    networks:
      default:
        aliases:
          - t1.gov
          - t2.gov
          - t3.gov
volumes:
  jemison-queues-db-vol:
  minio-data: